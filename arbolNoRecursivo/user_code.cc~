//**************************************************************************
// Codigo del usuario
//
// Domingo Martin Perandres 2013
//
// GPL
//**************************************************************************

#include "user_code.h"
#include "file_ply_stl.h"

//**************************************************************************
// Funcion para dibujar los vertices de un cubo unidad
//***************************************************************************


void draw_rotated_branch()
{

  glPointSize(4);
  
  glPolygonMode(GL_FRONT_AND_BACK,GL_FILL);


  glBegin(GL_LINES);
  for (int i = 0; i < 9; i++)
  {
    glColor3f(0,0,1);
    glVertex2f(0.0,0.0); //0
    glVertex2f(1.0,0.0); //1
    glVertex2f(1.0,1.0); //2
    glVertex2f(2.0,2.0); //3
    glVertex2f(1.5,2.5); //4
    glVertex2f(0.5,1.5); //5
    glVertex2f(0.0,3.0); //6
    glVertex2f(-0.5,3.0); //7 
    glVertex2f(0.0,1.5); //8
    
  }
  glEnd();
 
}

void draw_right_branch(float rotation_array[], float translate_array[], float  scale_array[])
{

    glPushMatrix();
      glTranslatef(translate_array[0],translate_array[1],translate_array[2]);
      glScalef(scale_array[0],scale_array[1],scale_array[2]);
      glRotatef(rotation_array[0],rotation_array[1],rotation_array[2],rotation_array[3]);
      draw_rotated_branch();
    glPopMatrix();
}


void draw_three_trunk()
{
    
  glPushMatrix();
    draw_rotated_branch();
    glPushMatrix();
      glTranslatef(0.0,3.0,0.0);
      glScalef(0.5,0.5,0.5);
      draw_rotated_branch();
    glPopMatrix();
    float rotation[] = {-45.0,0.0,0.0,1.0};
    float translate[] = {2.0,3.0,0.0};
    float scale[] = {0.7,0.7,0.7};
    draw_right_branch(rotation, translate, scale);    
  glPopMatrix();
  

}

void draw_cube()
{

    //Codigo que permite visualizar un vector de flotantes en modo puntos
  //GLfloat Vertices[9][3]= {{0.0,0.0,0.0},{0.5,-0.5,0.5},{0.5,0.5,0.5},{-0.5,0.5,0.5},{-0.5,-0.5,-0.5},{0.5,-0.5,-0.5},{0.5,0.5,-0.5},{-0.5,0.5,-0.5}};
  draw_rotated_branc();

}





void draw_small_branch(float rotation, float x_rotation, float y_rotation, float trans_x, float trans_y)
{
  glPushMatrix();
      glTranslatef(trans_x,trans_y,0.0);
      glScalef(0.5,0.5,0.5);
      draw_rotated_branch();
    glPopMatrix();
}
